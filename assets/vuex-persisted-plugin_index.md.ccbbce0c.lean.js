import{_ as n,c as l,o,a,b as s}from"./app.de9268e4.js";const g=JSON.parse('{"title":"vuex-persisted-plugin","description":"","frontmatter":{},"headers":[{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[]},{"level":2,"title":"属性&方法","slug":"属性-方法","link":"#属性-方法","children":[]},{"level":2,"title":"配置","slug":"配置","link":"#配置","children":[{"level":3,"title":"paths","slug":"paths","link":"#paths","children":[]},{"level":3,"title":"storage","slug":"storage","link":"#storage","children":[]},{"level":3,"title":"storageKey","slug":"storagekey","link":"#storagekey","children":[]},{"level":3,"title":"getState","slug":"getstate","link":"#getstate","children":[]},{"level":3,"title":"setState","slug":"setstate","link":"#setstate","children":[]},{"level":3,"title":"removeState","slug":"removestate","link":"#removestate","children":[]},{"level":3,"title":"mutationFilter","slug":"mutationfilter","link":"#mutationfilter","children":[]},{"level":3,"title":"resetMutationType","slug":"resetmutationtype","link":"#resetmutationtype","children":[]}]},{"level":2,"title":"定制化使用的示例","slug":"定制化使用的示例","link":"#定制化使用的示例","children":[]}],"relativePath":"vuex-persisted-plugin/index.md"}'),p={name:"vuex-persisted-plugin/index.md"},e=a("",8),t=s("table",null,[s("thead",null,[s("tr",null,[s("th",null,"属性"),s("th",null,"说明"),s("th",null,"类型"),s("th",null,"默认值")])]),s("tbody",null,[s("tr",null,[s("td",null,[s("code",null,"paths")]),s("td",null,"需要持久化状态属性集合"),s("td",null,"(string|Path)[]"),s("td",null,"[]")]),s("tr",null,[s("td",null,[s("code",null,"storage")]),s("td",null,"指定存储类型"),s("td",null,"Storage"),s("td",null,"localStorage")]),s("tr",null,[s("td",null,[s("code",null,"storageKey")]),s("td",null,"存储中存储状态的键值"),s("td",null,"string"),s("td",null,"__VUEX_PERSIST_PLUGIN__")]),s("tr",{return:"","storage.getItem(key)":"","&amp;&amp;":"","JSON.parse(storage.getItem(key)!)":""},[s("td",null,[s("code",null,"getState")]),s("td",null,"自定义获取本地存储中状态的逻辑"),s("td",null,"(storage: Storage, key: string) => Record<string, unknown>;"),s("td",null,"(storage, key) =>")]),s("tr",{"storage.setItem(key,":"","JSON.stringify(value));":""},[s("td",null,[s("code",null,"setState")]),s("td",null,"用于自定义将状态存储到本地存储的逻辑"),s("td",null,"(storage: Storage, key: string, value: unknown) => void;"),s("td",null,"(storage, key, value) =>")]),s("tr",{"storage.removeItem(key)":""},[s("td",null,[s("code",null,"removeState")]),s("td",null,"用于自定义从本地存储中移除状态的逻辑"),s("td",null,"(storage: Storage, key: string) => void;"),s("td",null,"(storage, key) =>")]),s("tr",null,[s("td",null,[s("code",null,"mutationFilter")]),s("td",null,"用于过滤哪些 mutation 会触发状态持久化"),s("td",null,"(mutation: MutationPayload) => boolean"),s("td",null,"(mutation) => true")]),s("tr",null,[s("td",null,[s("code",null,"resetMutationType")]),s("td",null,"指定一个 mutation 类型会重置状态为初始状态"),s("td",null,"string"),s("td",null,"__RESET_STATE__")])])],-1),r=a("",23),c=[e,t,r];function y(D,F,i,C,A,u){return o(),l("div",null,c)}const h=n(p,[["render",y]]);export{g as __pageData,h as default};
